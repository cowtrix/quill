@inherits GenericEditorBase<Character>

@using MudBlazor.Utilities;
@using Squill.Data;
@using Squill.Data.Elements;


<MudPaper Elevation="15" Outlined=true Square=true Class="border-collapse">
    <MudItem>
        <MudStack Row=true>
            <MudStack>
                <ImageField @bind-Value=@Target.ImagePath Session=Session />
                <div class="color-picker">
                    <div class="color-preview" style="background-color:@Color" />
                    <MudColorPicker Label="Tag Color" @bind-Value=@Color Variant="Variant.Outlined" IconSize="Size.Small" Margin="Margin.Dense" />
                </div>
            </MudStack>
            <MudStack Style="width: 100%;">
                <MudPaper Elevation="2">
                    <MudStack Row=true>
                        <MudChipSet OnClose="(i) => Target.CharacterTypes.Remove((eCharacterType)i.Tag)" AllClosable=true>
                            @foreach (var label in Target.CharacterTypes)
                            {
                                <MudChip Tag="label">@label</MudChip>
                            }
                        </MudChipSet>
                        <MudSpacer />
                        <MudMenu Icon="@Icons.Material.Filled.Add" AnchorOrigin="Origin.BottomLeft">
                            @foreach (var type in Enum.GetValues<eCharacterType>())
                            {
                                <MudMenuItem OnClick="() => Target.CharacterTypes.Add(type)">@type</MudMenuItem>
                            }
                        </MudMenu>
                    </MudStack>
                </MudPaper>
                <MudTextField Label="Description" @bind-Value=@Target.Description Variant="Variant.Outlined" DisableUnderLine=true Lines="4" />
            </MudStack>
        </MudStack>
    </MudItem>
</MudPaper>

@code {
    private MudColor Color
    {
        get
        {
            return string.IsNullOrEmpty(Target.Color) ? Meta.Name.GetDefaultColor() : new MudColor(Target.Color);
        }
        set
        {
            var defaultCol = Meta.Name.GetDefaultColor();
            if (defaultCol == value)
            {
                Target.Color = null;
            }
            else
            {
                Target.Color = value.ToString();
            }
        }
    }
}

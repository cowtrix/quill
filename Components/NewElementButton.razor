@using Squill.Data;

@*<MudSelect T="Type" AdornmentIcon="@Icons.Material.Filled.Add" AnchorOrigin="Origin.BottomRight" SelectedValuesChanged="OnSelected" Style="max-width:1.5rem;">
    @foreach (var elementType in ElementFactory.SupportedTypes)
    {
        <MudSelectItem Value="elementType">@elementType.Name</MudSelectItem>
    }
</MudSelect>*@

<MudMenu Icon="@Icons.Material.Filled.Add">
    @foreach (var elementType in ElementFactory.SupportedTypes)
    {
        <MudMenuItem OnClick="async () => await OnSelected(elementType)">@elementType.Name</MudMenuItem>
    }
</MudMenu>

@code {
    [Parameter]
    public ProjectSession Session { get; set; }

    [Parameter]
    public EventCallback<IElement> OnElementCreated { get; set; }

    private async Task OnSelected(Type type)
    {
        var newElement = await Session.CreateNewElement(type);
        await OnElementCreated.InvokeAsync(newElement);
    }
}

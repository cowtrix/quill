@using Squill.Components.Layout
@using Squill.Data;
@using Squill.Services;
@inject GalleryService GalleryService

@if (IsOpen)
{
    <div class="sq-window-wrapper gallery-wrapper">
        <div class="sq-window gallery-window">
            <div class="sq-window-toolbar">
                <SqIconButton Icon="x-lg" OnClick="() => IsOpen = false" />
            </div>
            @foreach (var img in GalleryService.GetAllImages(Session))
            {
                var path = img;
                <div class="grid-item" @onclick="() => Select(path)">
                    <DynamicImage Session="Session" Path="@img" class="image-display" />
                </div>
            }
        </div>
    </div>
}

@code {
    public bool IsOpen { get; private set; }

    public Action<string> Callback { get; private set; }

    [Parameter]
    public ProjectSession Session { get; set; }

    protected override void OnInitialized()
    {
        GalleryService.OnOpen += OnOpen;
    }

    private void OnOpen(object? sender, Action<string> onSelected)
    {
        Callback = onSelected;
        IsOpen = true;
        InvokeAsync(StateHasChanged);
    }

    private void Select(string value)
    {
        Callback.Invoke(value);
        IsOpen = false;
    }
}

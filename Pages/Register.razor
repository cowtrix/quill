@using Blazored.LocalStorage;
@using Squill.Components.Layout
@using Squill.Services;
@page "/register/"
@inject UserService UserService
@inject NavigationManager NavManager
@inject ILocalStorageService Storage

<div class="sq-form sq-auth-form">
    <EditForm EditContext="m_context" OnSubmit="TryRegister">
        <div class="sq-form-content">
            @if (!string.IsNullOrEmpty(m_error))
            {
                <span class="sq-error">@m_error</span>
            }
            <SqInputText Label="Username" @bind-Value=m_model.UserName />
            <SqInputText Label="Email" @bind-Value=m_model.Email />
            <SqInputText Label="Password" @bind-Value=m_model.Password type="password"/>
            <button class="sq-button" type="submit">Register</button>
        </div>
    </EditForm>
</div>

@code {
    public static string URL => "/register";

    public class RegisterModel
    {
        public string UserName { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
    }
    private EditContext m_context;
    private RegisterModel m_model = new RegisterModel();
    private string m_error;

    protected override void OnInitialized()
    {
        m_context = new EditContext(m_model);
    }

    private async Task TryRegister(EditContext context)
    {
        var model = context.Model as RegisterModel;
        if (model == null)
        {
            m_error = "Error parsing model";
            return;
        }

        if (string.IsNullOrEmpty(model.UserName) || UserService.UserExists(model.UserName))
        {
            m_error = "Invalid username";
            return;
        }

        if (string.IsNullOrEmpty(model.Password) || model.Password.Length < 5)
        {
            m_error = "Invalid password";
            return;
        }

        if (string.IsNullOrEmpty(model.Email))
        {
            m_error = "Invalid email";
            return;
        }

        await UserService.Register(Storage, model.UserName, model.Email, model.Password);

        NavManager.NavigateTo("/", true);
    }
}
